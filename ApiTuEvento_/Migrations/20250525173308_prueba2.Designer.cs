// <auto-generated />
using System;
using ApiTuEvento_.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiTuEvento_.Migrations
{
    [DbContext(typeof(ContextDB))]
    [Migration("20250525173308_prueba2")]
    partial class prueba2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiTuEvento_.Models.Boleto", b =>
                {
                    b.Property<int>("BoletoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoletoId"));

                    b.Property<int?>("CarritoIdCarrito")
                        .HasColumnType("int");

                    b.Property<string>("CodigoAN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoQR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoVenta")
                        .HasColumnType("bit");

                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<string>("NombreComprador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("int");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<string>("TipoBoleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BoletoId");

                    b.HasIndex("CarritoIdCarrito");

                    b.HasIndex("EventoId");

                    b.HasIndex("PersonaId");

                    b.ToTable("boletos");
                });

            modelBuilder.Entity("ApiTuEvento_.Models.Carrito", b =>
                {
                    b.Property<int>("IdCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCarrito"));

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdCarrito");

                    b.ToTable("carritos");
                });

            modelBuilder.Entity("ApiTuEvento_.Models.CategoriaEvento", b =>
                {
                    b.Property<int>("IdCategoriaEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoriaEvento"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategoriaEvento");

                    b.ToTable("categoriaEventos");
                });

            modelBuilder.Entity("ApiTuEvento_.Models.Evento", b =>
                {
                    b.Property<int>("EventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventoId"));

                    b.Property<int>("Aforo")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaEventoId")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionEvento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoEventoActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaEvento")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Imagen")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LugarEvento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreEvento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventoId");

                    b.HasIndex("CategoriaEventoId");

                    b.ToTable("eventos");
                });

            modelBuilder.Entity("ApiTuEvento_.Models.Persona", b =>
                {
                    b.Property<int>("PersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonaId"));

                    b.Property<int?>("CarritoIdCarrito")
                        .HasColumnType("int");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonaId");

                    b.HasIndex("CarritoIdCarrito");

                    b.ToTable("personas");
                });

            modelBuilder.Entity("ApiTuEvento_.Models.Boleto", b =>
                {
                    b.HasOne("ApiTuEvento_.Models.Carrito", null)
                        .WithMany("boletos")
                        .HasForeignKey("CarritoIdCarrito");

                    b.HasOne("ApiTuEvento_.Models.Evento", "evento")
                        .WithMany("Boletos")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiTuEvento_.Models.Persona", "persona")
                        .WithMany("boletos")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("evento");

                    b.Navigation("persona");
                });

            modelBuilder.Entity("ApiTuEvento_.Models.Evento", b =>
                {
                    b.HasOne("ApiTuEvento_.Models.CategoriaEvento", "CategoriaEvento")
                        .WithMany("Eventos")
                        .HasForeignKey("CategoriaEventoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CategoriaEvento");
                });

            modelBuilder.Entity("ApiTuEvento_.Models.Persona", b =>
                {
                    b.HasOne("ApiTuEvento_.Models.Carrito", "Carrito")
                        .WithMany()
                        .HasForeignKey("CarritoIdCarrito");

                    b.Navigation("Carrito");
                });

            modelBuilder.Entity("ApiTuEvento_.Models.Carrito", b =>
                {
                    b.Navigation("boletos");
                });

            modelBuilder.Entity("ApiTuEvento_.Models.CategoriaEvento", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("ApiTuEvento_.Models.Evento", b =>
                {
                    b.Navigation("Boletos");
                });

            modelBuilder.Entity("ApiTuEvento_.Models.Persona", b =>
                {
                    b.Navigation("boletos");
                });
#pragma warning restore 612, 618
        }
    }
}
